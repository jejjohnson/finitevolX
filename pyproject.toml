[tool.poetry]
name = "finitevolx"
version = "0.0.1"
description = "Finite Volume tools in JAX."
authors = [
    "Juan Emmanuel Johnson <jemanjohnson34@gmail.com>",
    "Takaya Uchida <roxyboy.guppy@gmail.com>"
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/jejjohnson/finitevolx"
keywords = ["finite-volume", "arakawa", "jax"]
classifiers = [
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Operating System :: MACOS/Linux",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Development Status :: 2 - Pre-Alpha copy",

]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
jaxtyping = "^0.2.15"
beartype = "^0.13.1"
jax = ">=0.4.10"
jaxlib = ">=0.4.10"
finitediffx = "^0.1.0"
kernex = "^0.2.0"
jupyter = "^1.0.0"
interpax = "^0.2.3"
jaxinterp2d = {git = "https://github.com/adam-coogan/jaxinterp2d.git"}


[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-pretty = "^1.1.1"
pytest-xdist = "^3.2.1"
networkx = "^3.0"
coverage = "^7.2.2"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
isort = "^5.12.0"
pylint = "^2.17.1"
nox = "^2022.11.21"
ruff = "^0.0.259"
flax = "^0.6.8"
pre-commit = "^3.2.2"
nbstripout = "^0.6.1"
pydocstyle = "^6.3.0"
codespell = "^2.2.4"
asv = "^0.6.0"
interrogate = "^1.5.0"


[tool.poetry.group.exp.dependencies]
wandb = "^0.15.0"
loguru = "^0.7.0"
matplotlib = "^3.7.1"
seaborn = "^0.12.2"
autoroot = "^1.0.0"
fieldx = { git = "https://github.com/jejjohnson/fieldx.git" }


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options] # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
# addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=my_package --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["finitevolx"]
xfail_strict = true


[tool.ruff] # https://github.com/charliermarsh/ruff
fix = true
cache-dir = "~/.cache/ruff"
dummy-variable-rgx = "^_$"
exclude = ["docs/"]
ignore-init-module-imports = true
line-length = 88
select = [
  # pyflakes
  "F",
  # pycodestyle
  "E",
  "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # pylint
  "PLE",
  "PLR",
  "PLW",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
]
ignore = [
  # space before : (needed for how black formats slicing)
  # "E203",  # not yet implemented
  # module level import not at top of file
  "E402",
  # do not assign a lambda expression, use a def
  "E731",
  "E501",
  "PGH001",
  "RET504",
  "S101",
  "F722",
  'PLR2004',
  "PLR0913",
]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]
src = ["finitevolx"]
target-version = "py38"

[tool.black] # https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
line-length = 88
target-version = ["py38"]


[tool.isort]
profile = "black"
combine_as_imports = true
force_sort_within_sections = true
force_grid_wrap = 2
skip = 'docs'

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml] # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"
